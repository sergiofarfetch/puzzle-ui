/*Calculate em*/
@function calculateEm($target, $context: $base-font-size) {
   @if $target == 0 { @return 0 }
   @return $target / $context + 0em;
}

@function calculateEmN($target, $context: 16) {
   @if $target == 0 { @return 0 }
   $target : number($target);
   @return number($target) / $context + 0 ;
}

/*Calculate rems*/
@function calculateRem($size) {
  $remSize: $size / 10;
  @return #{$remSize}rem;
}

/*Calculate line-heights*/
@function calculateLineHeight($size){
  $size: $size / 1px;
  $line-height: 1;
  @if $size < 19 and $size > 10{
  $line-height: ($size * 1.60);
  }

  @else{
  $line-height: ($size * 1.25);
  }

  @return #{$line-height/10}em;
}


@function _length($number, $unit) {
  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';
  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;
  $index: index($strings, $unit);
  
  @if not $index {
    @warn "Unknown unit `#{$unit}`.";
    @return false;
  }
  
  @return $number * nth($units, $index);
}

@function number($string) {
  // Matrices
  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
  $numbers:  0   1   2   3   4   5   6   7   8   9;
  
  // Result
  $result: 0;
  $divider: 0;
  $minus: false;

  // Looping through all characters
  @for $i from 1 through str-length($string) {
    $character: str-slice($string, $i, $i);
    $index: index($strings, $character);
    
  
    @if $character == '-' {
      $minus: true;
    }
    
    @else if $character == '.' {
      $divider: 1;
    }
    
    @else {
      @if not $index {
        $result: if($minus, $result * -1, $result);
        @return _length($result, str-slice($string, $i));
      }

      $number: nth($numbers, $index);
      
      @if $divider == 0 {
        $result: $result * 10;
      }
      
      @else {
        // Move the decimal dot to the left
        $divider: $divider * 10;
        $number: $number / $divider;
      }
      
      $result: $result + $number;
    }
  }
  
  @return if($minus, $result * -1, $result);
}