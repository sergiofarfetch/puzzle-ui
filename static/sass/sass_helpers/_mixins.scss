
/*Font face*/
@mixin font-face($font-path, $font-family, $font-filename, $font-weight : normal, $font-style : normal) {
  @font-face {
    font-family: '#{$font-family}';
    src: url('#{$font-path}#{$font-filename}.eot');
    src: url('#{$font-path}#{$font-filename}.eot?#iefix') format('embedded-opentype'),
    url('#{$font-path}#{$font-filename}.woff') format('woff'),
    url('#{$font-path}#{$font-filename}.ttf') format('truetype'),
    url('#{$font-path}#{$font-filename}.svg##{$font-family}') format('svg');
    font-weight: $font-weight;
    font-style: $font-style;
  }
}

@mixin google-font($font-name, $font-family){
  @import url("http://fonts.googleapis.com/css?family="+$font-name+":"+unquote($font-family));
}

/*Border-radius*/
@mixin border-radius($radius: 6px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

/*Box-shadow*/
@mixin box-shadow($left, $top, $blur, $color, $inset:""){
  -webkit-box-shadow:$left $top $blur $color unquote($inset);
  -moz-box-shadow:$left $top $blur $color unquote($inset);
  box-shadow:$left $top $blur $color unquote($inset);
}

@mixin box-shadow-no(){
  -moz-box-shadow: none!important;
  -o-box-shadow: none!important;
  -webkit-box-shadow: none!important;
  box-shadow: none!important;
}

/*Buttons*/
@mixin button($bg-color, $color, $font, $width, $align, $opacity, $padding: "", $radius: ""){
  background-color: $bg-color;
  color: $color;
  font-family: $font;
  width: $width;
  text-align: $align;
  opacity: $opacity;
  padding: unquote($padding);
  @include border-radius($radius);
  border:0;
  outline: 0;
}

@mixin placeholder($color) {
  &::-webkit-input-placeholder{color:$color;}
  &:-moz-placeholder{color:$color;}
  &::-moz-placeholder{color:$color;}
  &:-ms-input-placeholder{color:$color;}
  text-overflow: ellipsis;
}

@mixin button_circle($align, $padding: "", $radius: ""){
  width: 30px;
  height: 30px;
  text-align: $align;
  padding: unquote($padding);
  @include border-radius($radius);
  border:0;
  outline: 0;
}

@mixin fontSize($size) {
  font-size: $size; //Fallback in px
  font-size: calculateEm($size);
  line-height: calculateLineHeight($size);
}

@mixin opacity($opacity){
  $opacityPer: ($opacity * 100);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$opacityPer+")";
  filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$opacityPer+")";
  opacity: $opacity;
}

/*HAVE GLOBAL MARGINS TO USE*/
@mixin margin($margins: ($global-margins)){
   @each $value in $margins {
      .m-#{$value} { 
        margin: calculateEm($value);
      }
      .mt-#{$value} { 
        margin-top: calculateEm($value);
      }
      .mb-#{$value} { 
        margin-bottom: calculateEm($value);
      }
      .ml-#{$value} { 
        margin-left: calculateEm($value);
      }
      .mr-#{$value} { 
        margin-right: calculateEm($value);
      }
  }
}

/*HAVE GLOBAL PADDINGS TO USE*/
@mixin padding($paddings: ($global-paddings)){
   @each $value in $paddings { 
      .p-#{$value} { 
        padding: calculateEm($value);
      }
      .pt-#{$value} { 
        padding-top: calculateEm($value);
      }
      .pb-#{$value} { 
        padding-bottom: calculateEm($value);
      }
      .pl-#{$value} { 
        padding-left: calculateEm($value);
      }
      .pr-#{$value} { 
        padding-right: calculateEm($value);
      }
  }
}

